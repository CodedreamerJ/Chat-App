{"ast":null,"code":"import _toConsumableArray from\"/Users/jameslloyd/Programming_Work_Folder/Chat-App/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/Users/jameslloyd/Programming_Work_Folder/Chat-App/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import queryString from'query-string';//Help us with retriving data from the URL\nimport io from'socket.io-client';import'./Chat.css';import TextContainer from'../TextContainer/TextContainer';import InfoBar from'../InfoBar/InfoBar';import Input from'../Input/Input';import Messages from'../Messages/Messages';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var socket;//useEffect hook is used for the basic setup of users joining and disconnecting\nvar Chat=function Chat(_ref){var location=_ref.location;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),room=_useState4[0],setRoom=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),users=_useState6[0],setUsers=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),message=_useState8[0],setMessage=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),messages=_useState10[0],setMessages=_useState10[1];var ENDPOINT='https://realtime-chat-app-2022.herokuapp.com/';useEffect(function(){var _queryString$parse=queryString.parse(location.search),name=_queryString$parse.name,room=_queryString$parse.room;//Location comes from React Router providing us with a Prop = location. Using this we essentially get a URL back\nsocket=io(ENDPOINT,{transports:['websocket']});setName(name);setRoom(room);socket.emit('join',{name:name,room:room},function(error){if(error){alert(error);}});},[ENDPOINT,location.search]);useEffect(function(){socket.on('message',function(message){setMessages(function(messages){return[].concat(_toConsumableArray(messages),[message]);});});// function for sending messages\nsocket.on(\"roomData\",function(_ref2){var users=_ref2.users;setUsers(users);});},[]);var sendMessage=function sendMessage(event){event.preventDefault();if(message){socket.emit('sendMessage',message,function(){return setMessage('');});}};return/*#__PURE__*/_jsxs(\"div\",{className:\"outerContainer\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(InfoBar,{room:room}),/*#__PURE__*/_jsx(Messages,{messages:messages,name:name}),/*#__PURE__*/_jsx(Input,{message:message,setMessage:setMessage,sendMessage:sendMessage})]}),/*#__PURE__*/_jsx(TextContainer,{users:users})]});};export default Chat;","map":{"version":3,"sources":["/Users/jameslloyd/Programming_Work_Folder/Chat-App/client/src/components/Chat/Chat.js"],"names":["React","useState","useEffect","queryString","io","TextContainer","InfoBar","Input","Messages","socket","Chat","location","name","setName","room","setRoom","users","setUsers","message","setMessage","messages","setMessages","ENDPOINT","parse","search","transports","emit","error","alert","on","sendMessage","event","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport queryString from 'query-string'; //Help us with retriving data from the URL\nimport io from 'socket.io-client';\n\nimport './Chat.css';\n\nimport TextContainer from '../TextContainer/TextContainer';\nimport InfoBar from '../InfoBar/InfoBar';\nimport Input from '../Input/Input';\nimport Messages from '../Messages/Messages';\n\nlet socket;\n\n//useEffect hook is used for the basic setup of users joining and disconnecting\n\nconst Chat = ({ location }) => {\n    const [name, setName] = useState(''); \n    const [room, setRoom] = useState('');\n    const [users, setUsers] = useState('');\n    const [message, setMessage] = useState('');\n    const [messages, setMessages] = useState([]);\n    const ENDPOINT = 'https://realtime-chat-app-2022.herokuapp.com/';\n   \n    useEffect(() => {\n        const { name, room } = queryString.parse(location.search); //Location comes from React Router providing us with a Prop = location. Using this we essentially get a URL back\n\n        socket = io(ENDPOINT, { transports : ['websocket'] });\n\n        setName(name);\n        setRoom(room);\n        \n       \n        socket.emit('join', { name, room }, (error) => {\n          if(error) {\n            alert(error);\n          }\n        });\n      }, [ENDPOINT, location.search]);\n\n      useEffect(() => {\n        socket.on('message', message => {\n          setMessages(messages => [ ...messages, message ]);\n        });\n      \n\n      // function for sending messages\n      socket.on(\"roomData\", ({ users }) => {\n        setUsers(users);\n      });\n  }, []);\n  \n    const sendMessage = (event) => {\n      event.preventDefault();\n  \n      if(message) {\n        socket.emit('sendMessage', message, () => setMessage(''));\n      }\n    }\n\n      return ( \n        <div className=\"outerContainer\">\n          <div className=\"container\">\n            <InfoBar room={room} />\n            <Messages messages={messages} name={name} />\n            <Input message={message} setMessage={setMessage} sendMessage={sendMessage} />\n          </div>\n          <TextContainer users={users}/>\n        </div>\n      )\n}\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}